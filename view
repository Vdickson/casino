from django.shortcuts import render
from django.http import JsonResponse
from .models import *
from django.http import StreamingHttpResponse
import json, time

from django.shortcuts import render, redirect
from django.contrib import messages
from .models import ConstantOffer, SocialLink, Subscriber
from .forms import SubscriptionForm


def home(request):
    constant_offers = ConstantOffer.objects.filter(is_active=True)
    social_links = SocialLink.objects.all()

    if request.method == 'POST':
        form = SubscriptionForm(request.POST)
        if form.is_valid():
            form.save()
            messages.success(request, 'Successfully subscribed!')
            return redirect('home')
        else:
            messages.error(request, 'Please correct the errors below.')
    else:
        form = SubscriptionForm()

    return render(request, 'casino/index.html', {
        'form': form,
        'constant_offers': constant_offers,
        'social_links': social_links
    })
def subscribe(request):
    if request.method == 'POST':
        email = request.POST.get('email')
        # Add validation and subscription logic
        return JsonResponse({'status': 'success'})
    return JsonResponse({'status': 'error'}, status=400)

def updates(request):
    def event_stream():
        last_id = LiveWin.objects.last().id if LiveWin.objects.exists() else 0
        while True:
            new_wins = LiveWin.objects.filter(id__gt=last_id)
            if new_wins.exists():
                for win in new_wins:
                    data = {
                        'type': 'win',
                        'username': win.username,
                        'amount': str(win.amount),
                    }
                    yield f"data: {json.dumps(data)}\n\n"
                    last_id = win.id
            time.sleep(5)  # Sleep only after processing

    response = StreamingHttpResponse(event_stream(), content_type='text/event-stream')
    response['Cache-Control'] = 'no-cache'
    return response

